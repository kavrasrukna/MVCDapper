@model aspnetmvcdapper.Models.urunmodel
@{ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_MainLayout.cshtml"; }  <!--_mainlayout adında shared içine view oluşturdum. burayada urlsini ekledim-->

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Ürün Ekle</h4>
    <hr />
    @Html.ValidationSummary(true) @*//ekledik, giden verilerin kontrolünü sağlar*@
    @Html.HiddenFor(model => model.urunid) @*//ekledik, id yi getirir*@
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.urunad, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.urunad, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = 50 } }) @*required = "required", maxlength = 50 alanları il giriş zorunlu hale getirildi ve metin boyutusınırlandırıldı. *@
            @Html.ValidationMessageFor(model => model.urunad, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />

    <div class="form-group">
        @Html.LabelFor(model => model.marka, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.marka, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = 50 } })
            @Html.ValidationMessageFor(model => model.marka, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />

    <div class="form-group">
        @Html.LabelFor(model => model.kategoriid, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.kategoriid, new { htmlAttributes = new { @class = "form-control", required = "required" } })
            @Html.ValidationMessageFor(model => model.kategoriid, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />

    <div class="form-group">
        @Html.LabelFor(model => model.fiyat, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.fiyat, new { htmlAttributes = new { @class = "form-control", required = "required" } })
            @Html.ValidationMessageFor(model => model.fiyat, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />

    <div class="form-group">
        @Html.LabelFor(model => model.stok, htmlAttributes: new { @class = "control-label col-md-2", required = "required" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.stok, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.stok, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Kaydet" class="btn btn-success" />
            @*@Html.ActionLink("Geri Dön", "Index")*@ @*bu da çalışır ama buton özelliği vermek için aşağıdaki gibi yazılır*@
            <button type="button" class="btn btn-danger" onclick="location.href = '@Url.Action("Index","urun")'">Geri Dön</button>
        </div>
    </div>
</div>
}


@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
<script src="~/Scripts/jquery-3.6.0.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
